{"ast":null,"code":"var _jsxFileName = \"/home/aurelien/Dev/PROJECT_WEB_OCRES/frontend/src/compo/Task.stories.js\";\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Task from './Task'; // La tâche de notre composant <Task />\n\nexport const task = {\n  id: '1',\n  title: 'Prévenir Jeanine',\n  state: 'TASK_INBOX',\n  updatedAt: new Date(2018, 0, 1, 9, 0)\n}; // Les callbacks qui sont mock via action()\n\nexport const actions = {\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask')\n}; // Les stories, c'est ça le truc stylé.\n\n/*  storiesOf('NomDuComposant', module)\n    .add('nomStory', render() callback) \n*/\n\nstoriesOf('Task', module).add('default', () => React.createElement(Task, Object.assign({\n  task: task\n}, actions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}))).add('pinned', () => React.createElement(Task, Object.assign({\n  task: /{...task, state: 'TASK_PINNED'}/\n}, actions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}))).add('archived', () => React.createElement(Task, Object.assign({\n  task: /{...task, state: 'TASK_ARCHIVED'}/\n}, actions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/home/aurelien/Dev/PROJECT_WEB_OCRES/frontend/src/compo/Task.stories.js"],"names":["React","storiesOf","action","Task","task","id","title","state","updatedAt","Date","actions","onPinTask","onArchiveTask","module","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACI,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,OAAO,MAAMC,IAAI,GAAG;AAChBC,EAAAA,EAAE,EAAE,GADY;AAEhBC,EAAAA,KAAK,EAAE,kBAFS;AAGhBC,EAAAA,KAAK,EAAE,YAHS;AAIhBC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AAJK,CAAb,C,CAOP;;AACA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,SAAS,EAAET,MAAM,CAAC,WAAD,CADE;AAEnBU,EAAAA,aAAa,EAAEV,MAAM,CAAC,eAAD;AAFF,CAAhB,C,CAKP;;AAEA;;;;AAGAD,SAAS,CAAC,MAAD,EAASY,MAAT,CAAT,CACCC,GADD,CACK,SADL,EACgB,MAAM,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAEV;AAAZ,GAAsBM,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADtB,EAECI,GAFD,CAEK,QAFL,EAEe,MAAM,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE;AAAZ,GAAmDJ,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFrB,EAGCI,GAHD,CAGK,UAHL,EAGiB,MAAM,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE;AAAZ,GAAqDJ,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHvB","sourcesContent":["import React from 'react';\n    import { storiesOf } from '@storybook/react';\n    import { action } from '@storybook/addon-actions';\n    \n    import Task from './Task';\n    \n    // La tâche de notre composant <Task />\n    export const task = {\n        id: '1',\n        title: 'Prévenir Jeanine',\n        state: 'TASK_INBOX',\n        updatedAt: new Date(2018, 0, 1, 9, 0)\n    };\n    \n    // Les callbacks qui sont mock via action()\n    export const actions = {\n        onPinTask: action('onPinTask'),\n        onArchiveTask: action('onArchiveTask')\n    };\n    \n    // Les stories, c'est ça le truc stylé.\n    \t \n    /*  storiesOf('NomDuComposant', module)\n        .add('nomStory', render() callback) \n    */ \n    storiesOf('Task', module)\n    .add('default', () => <Task task={task} {...actions} />)\n    .add('pinned', () => <Task task={/{...task, state: 'TASK_PINNED'}/} {...actions} />)\n    .add('archived', () => <Task task={/{...task, state: 'TASK_ARCHIVED'}/} {...actions} />);"]},"metadata":{},"sourceType":"module"}